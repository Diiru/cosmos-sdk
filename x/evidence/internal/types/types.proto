syntax = "proto3";
package cosmos_sdk.x.evidence.v1;

option go_package = "types";

import "third_party/proto/cosmos-proto/cosmos.proto";
import "third_party/proto/gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

// MsgSubmitEvidence defines an sdk.Msg type that supports submitting arbitrary
// Evidence.
message MsgSubmitEvidence {
  Evidence Evidence  = 1 [(gogoproto.moretags) = "yaml:\"evidence\"", (gogoproto.nullable) = false];
  bytes    Submitter = 2 [
    (gogoproto.casttype) = "github.com/cosmos/cosmos-sdk/types.AccAddress",
    (gogoproto.moretags) = "yaml:\"submitter\""
  ];
}

message Evidence {
  option (cosmos_proto.interface_type) =
      "github.com/cosmos/cosmos-sdk/x/evidence/exported.EvidenceI";
  oneof ev {
    Equivocation equivocation = 1;
  }
}

// Equivocation implements the Evidence interface and defines evidence of double
// signing misbehavior.
message Equivocation {
  option (gogoproto.goproto_stringer) = false;
  option (gogoproto.goproto_getters)  = false;

  int64                     height = 1 [(gogoproto.moretags) = "yaml:\"height\""];
  google.protobuf.Timestamp time   = 2 [
    (gogoproto.nullable) = false,
    (gogoproto.stdtime)  = true,
    (gogoproto.moretags) = "yaml:\"time\""
  ];
  int64 power             = 3 [(gogoproto.moretags) = "yaml:\"power\""];
  bytes consensus_address = 4 [(gogoproto.moretags) = "yaml:\"consensus_address\""];
}

// Params defines the total set of parameters for the evidence module
message Params {
  option (gogoproto.goproto_stringer)       = false;
  google.protobuf.Duration max_evidence_age = 1 [
    (gogoproto.nullable)    = false,
    (gogoproto.stdduration) = true,
    (gogoproto.moretags)    = "yaml:\"max_evidence_age\""
  ];
}
